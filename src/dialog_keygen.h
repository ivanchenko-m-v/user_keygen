/// $Header
/// ============================================================================
///		Author		: M. Ivanchenko
///		Date create	: 22-10-2014
///		Date update	: 23-10-2014
///		Comment		:
/// ============================================================================
#include <QDialog>
#include <QWidget>
#include <QLineEdit>
#include <QPushButton>
#include <QCheckBox>

#ifndef __DIALOG_KEYGEN_H__
#define __DIALOG_KEYGEN_H__

namespace espira
{

namespace widgets
{

/// ############################################################################
///			class dialog_keygen
/// ############################################################################
    class dialog_keygen : public QDialog
	{
	Q_OBJECT
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        dialog_keygen( const dialog_keygen &rhs );

	public:
        /// --------------------------------------------------------------------
        explicit dialog_keygen( QWidget *parent = 0, Qt::WindowFlags f = 0 );
        /// --------------------------------------------------------------------
        virtual ~dialog_keygen( );

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        void initialize( );
        /// --------------------------------------------------------------------
        void init_layout( );
        /// --------------------------------------------------------------------
        void init_connections( );
        /// --------------------------------------------------------------------
        QWidget* init_full_name( );
        /// --------------------------------------------------------------------
        QWidget* init_login( );
        /// --------------------------------------------------------------------
        QWidget* init_pwd( );
        /// --------------------------------------------------------------------
        QWidget* init_admin_check( );
        /// --------------------------------------------------------------------
        QWidget* init_buttons( );

	public:

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
	public:
        /// --------------------------------------------------------------------
        /// login( )
        QString login( ) const
        {
            return this->_txt_login->text( );
        }
        void login( const QString& x_login )
        {
            this->_txt_login->setText( x_login );
        }
        /// --------------------------------------------------------------------
        /// full_name( )
        QString full_name( ) const
        {
            return this->_txt_full_name->text( );
        }
        void full_name( const QString& x_full_name )
        {
            this->_txt_full_name->setText( x_full_name );
        }
        /// --------------------------------------------------------------------
        /// hash( )
        QString hash( ) const;


    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        dialog_keygen& operator=( const dialog_keygen &rhs );

    /// ========================================================================
    ///		SLOTS
    /// ========================================================================
    private slots:
        /// --------------------------------------------------------------------
        void load_keyfile( );

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:
        QLineEdit   *_txt_full_name;
        QLineEdit   *_txt_login;
        QLineEdit   *_txt_pwd;
        QCheckBox   *_chk_admin;

        QPushButton *_btn_load;
        QPushButton *_btn_ok;
        QPushButton *_btn_cancel;

    };//class dialog_keygen
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class keygen_data
/// ############################################################################
    class keygen_data
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    public:
        /// --------------------------------------------------------------------
        keygen_data(
                            const QString &x_full_name = QString( "" ),
                            const QString &x_login = QString( "" ),
                            const QString &x_hash = QString( "" )
                            ) :
            _is_su( false ),
            _x_full_name( x_full_name ),
            _x_login( x_login ),
            _x_hash( x_hash )
        {
        }

        /// --------------------------------------------------------------------
        explicit keygen_data( const keygen_data &rhs ) :
            _is_su( rhs._is_su ),
            _x_full_name( rhs._x_full_name ),
            _x_login( rhs._x_login ),
            _x_hash( rhs._x_hash )
        {
        }

        /// --------------------------------------------------------------------
        virtual ~keygen_data( );

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    public:
        /// --------------------------------------------------------------------
        QString signature( );

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    public:
        /// --------------------------------------------------------------------
        keygen_data& operator=( const keygen_data &rhs )
        {
            if( this == &rhs )
            {
                return *this;
            }

            this->_is_su       = rhs._is_su;
            this->_x_full_name = rhs._x_full_name;
            this->_x_login     = rhs._x_login;
            this->_x_hash      = rhs._x_hash;

            return *this;
        }

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:
        bool        _is_su;
        QString     _x_full_name;
        QString     _x_login;
        QString     _x_hash;

    };//class keygen_data
/// ############################################################################
/// ----------------------------------------------------------------------------

}//namespace widgets

}//namespace espira

#endif // __DIALOG_KEYGEN_H__
